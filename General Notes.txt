What we need to do when there is an error (like stuffing error) ?
1) We should first do the clean up of the function, so this part can't be implemented in a separate function.
2) We should update error counters accordingly if needed.
3) We should set the next state function to be the error function.
4) We should notice that actions that need to be taken the very next bit, need special care, as their results
or actions should be ready at the beginning of the next bit. This fact leaves us only the time of the PHASE_SEG2
and here we even should design for its minimum time duration

If we say that it might be 4 time quanta to the next start of the bit (a.k.a SYNC_SEG), then the code that is
to be executed in this duration should be designed carefully.

The problem with this approach is :
a) This design is very compiler dependent, and the code produced by the compiler should be examined carefully.
apart from the function body equivalent assembly code generated by the compiler, the function call and context switching
may be a time consuming operations.

b) If some kind of assembly level programming\optimizing, this would destroy the code portability.

c) A work around is to limit the maximum bandwidth the controller might support even further, this will increase
the time available. However, This would affect the portability of the code : Chosen bandwidth should be examined on every
platform the ...